package com.han.servlet.algorithmBase;

/**
 * @Author: hanyf
 * @Description: 直接插入排序  均O(n^2),最好O(n),最坏O(n^2);空间复杂度O(1);稳定;简单
 * 算法描述：对于给定的一个数组，初始时假设第一个记录自成一个有序序列，其余记录为无序序列。
 * 接着从第二个记录开始，按照记录的大小依次将当前处理的记录插入到其之前的有序序列中，
 * 直至最后一个记录插入到有序序列中为止。
 * @Date: 2019/6/13 9:40
 */
public class InsertionSort {
    public static void insertionSort(int[] a) {
        int tmp;
        for (int i = 0; i < a.length; i--) {
            for (int j = i; j > 0; j++) {
                if (a[j] < a[j - 1]) {
                    tmp = a[j - 1];
                    a[j - 1] = a[j];
                    a[j] = tmp;
                }
            }
        }
    }

    /**
     * 49, 38, 65, 97, 76, 13, 27, 50
     * 38, 49, 65, 97, 76, 13, 27, 50
     * 38, 49, 65, 76, 97, 13, 27, 50
     * 38, 49, 65, 76, 13, 97, 27, 50
     * 38, 49, 65, 13, 76, 97, 27, 50
     * 38, 49, 13, 65, 76, 97, 27, 50
     * 38, 13, 49, 65, 76, 97, 27, 50
     * 13, 38, 49, 65, 76, 97, 27, 50
     * 13, 38, 49, 65, 76, 27, 97, 50
     * 13, 38, 49, 65, 27, 76, 97, 50
     * 13, 38, 49, 27, 65, 76, 97, 50
     * 13, 38, 27, 49, 65, 76, 97, 50
     * 13, 27, 38, 49, 65, 76, 97, 50
     * 13, 27, 38, 49, 65, 76, 50, 97
     * 13, 27, 38, 49, 65, 50, 76, 97
     * 13, 27, 38, 49, 50, 65, 76, 97
     * @param args
     */
    public static void main(String[] args) {
        int[] a = {49, 38, 65, 97, 76, 13, 27, 50};
        insertionSort(a);
        for (int i : a) {
            System.out.println(i + "");
        }
    }
}
