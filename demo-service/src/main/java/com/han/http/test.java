package com.han.http;

import com.alibaba.fastjson.JSONObject;
import com.google.common.collect.Lists;

import java.io.*;
import java.util.HashMap;

/**
 * @program: mall
 * @author: shiliang
 * @create: 2020-04-14 19:46
 * @description:
 **/
public class test {
    public static void main(String[] args) {

        try {

            java.util.List<Long> idList = Lists.newArrayList(10116664647585793L,
                    10423431222374401L);
            for (Long id : idList) {
                String json = "{\"idList\":[%s], \"status\":1500}";
                String format = String.format(json, id);
                // 发货
                post(format);

            }

            // 修改原始单
            // post("{\"id\":\"9029852481241089\",\"modifyTime\":1,\"outOrderStatus\":\"JH_02\"}");
            // 原始单日志
            // post("{\"orderNo\":\"1238871063445582266\"}");
        } catch (IOException e) {
            e.printStackTrace();
        }
        // test();
    }

    /**
     * 从日志中检出发货对象
     */
    // static void test() {
    //     try {
    //
    //         //需要写入的文件的路径
    //         // String filePath = "C:\\Users\\shiliang\\Desktop\\发货失败_Message_JSON.json";
    //         String filePath = "C:\\Users\\shiliang\\Desktop\\发货失败_SendOrderVO_JSON.json";
    //         File file1 = new File(filePath);
    //         FileOutputStream fos = null;
    //         if (!file1.exists()) {
    //             file1.createNewFile();//如果文件不存在，就创建该文件
    //             fos = new FileOutputStream(file1);//首次写入获取
    //         } else {
    //             //如果文件已存在，那么就在文件末尾追加写入
    //             fos = new FileOutputStream(file1, true);//这里构造方法多了一个参数true,表示在文件末尾追加写入
    //         }
    //
    //         OutputStreamWriter osw = new OutputStreamWriter(fos, "UTF-8");//指定以UTF-8格式写入文件
    //
    //         // 文件编码
    //         String encoding = "utf-8";
    //
    //         // 缓冲区大小
    //         int inputBufferSize = 10 * 1024 * 1024;
    //
    //
    //         long start = System.currentTimeMillis();
    //         // 被搜索的文本
    //         //String [] textToFind = {"1195269991111208961","1195269860609634306","1195246027999686658"};
    //         String[] textToFind = {"process(61)|发货:SendOrderVO"};
    //
    //         //String [] textToFind = {"700580641688476236"};
    //
    //         // 被搜索的文件
    //         // String filepath = "C:\\Users\\shiliang\\Desktop\\LOG\\oms-mall-actuator-644b8c7559-njz82\\root.log";
    //         String filepath = "C:\\Users\\shiliang\\Desktop\\LOG\\oms-mall-actuator-644b8c7559-qplv7\\root.log";
    //         //String filepath = "C:\\Users\\shiliang\\Desktop\\root.log";
    //
    //
    //         File file = new File(filepath);
    //         BufferedInputStream fis = new BufferedInputStream(new FileInputStream(file));
    //         BufferedReader reader = new BufferedReader(new InputStreamReader(fis, encoding), inputBufferSize);
    //
    //         Long countLine = 0L;
    //
    //         String line = "";
    //         System.out.println("======开始=====");
    //         HashMap<String, String> stringStringHashMap = new HashMap<>();
    //         while ((line = reader.readLine()) != null) {
    //             countLine++;
    //             for (String string : textToFind) {
    //                 boolean contains = line.contains(string);
    //                 if (contains) {
    //                     for (String string2 : textToFind2) {
    //                         boolean contains2 = line.contains(string2);
    //                         if (contains2) {
    //
    //                             /**
    //                              * 检查此 sendOrderVO 字段是否符合标准
    //                              */
    //                             String s = subString(line);
    //                             SendOrderVO object = (SendOrderVO)getObject(s, SendOrderVO.class);
    //                             if (null == stringStringHashMap.get(object.getPlatOrderNo())) {
    //
    //                                 // 创建队列消息
    //                                 QueueMessage<SendOrderVO> message = new QueueMessage <>();
    //                                 // 设置消息类型(建议各系统创建枚举，便于统一管理)
    //                                 message.setType(1);
    //                                 // 设置消息载荷
    //                                 message.setContent(object);
    //
    //                                 // osw.write(JSONObject.toJSONString(message));
    //
    //                                 osw.write(JSONObject.toJSONString(object));
    //                                 osw.write("\n");
    //                                 post(JSONObject.toJSONString(object));
    //                                 stringStringHashMap.put(object.getPlatOrderNo(), "0");
    //                             }
    //
    //                         }
    //                     }
    //
    //                 }
    //             }
    //
    //         }
    //         System.out.println("======结束=====");
    //
    //         //写入完成关闭流
    //         osw.close();
    //
    //     } catch (IOException e) {
    //         e.printStackTrace();
    //     }
    // }

    /**
     * 访问 feign 接口
     * @param json
     * @return
     * @throws IOException
     */
    static boolean post(String json) throws IOException {
        java.util.Map<String, String> headerMap = new HashMap<>();

        // 生产
        String url = "https://gw-atom-source.yestae.com/oms-order-service/orderServiceFeign/orderStatusFlow";
        // 生产 修改原始单
        // String url = "https://gw-atom-source.yestae.com/oms-original-order-service/originalOrder/update";
        // headerMap.put("userid", "5241703805448193");

        // 测试
        // String url = "https://gw-atom-source-test.yestae.com//mall-actuator-service/deliveryServiceFeign/delivery";

        // 测试 修改原始单
        // String url = "https://gw-atom-source-test.yestae.com/oms-original-order-service/originalOrder/update";

        // 测试 获得原始单日志
        // String url = "https://gw-atom-source-test.yestae.com/oms-original-order-service/originalorderlog/getList";

        // 生产
        headerMap.put("userid", "4920404699594752");
        headerMap.put("authorization-token", "5OH5N8qaP0gfizQV");
        headerMap.put("companyid", "1");
        headerMap.put("Content-Type", "application/json");

        HttpClientUtils post = HttpClientUtils.post(url);
        post.setHeader(headerMap);
        post.setBody(json);
        String execute = post.execute();
        System.out.println("HttpClientUtils: "+execute);
        return true;

    }
    /**
     *
     * @param json
     * @param o
     * @return
     */
    static Object getObject(String json, Class o) {
        return JSONObject.parseObject(json, o);
    }


    /**
     *
     * @param json
     * @return
     */
    static String subString(String json) {
        String[] split = org.apache.commons.lang3.StringUtils.split(json, "=");

        return split[1].trim();
    }

    private static  String[] textToFind2 = {
            "1190988579874203362",
            "1191311107095322217",
            "130906237352",
            "1191056514119780206",
            "1190982913300890501",
            "1190954497408964833",
            "1190244704380621213",
            "1190950593575342965",
            "1190896514498823812",
            "1190855905368881619",
            "1190894210462813562",
            "1190790977879422323",
            "1190814753509784629",
            "1191100931682623478",
            "1190746305001312005",
            "1190759105033318345",
            "1191065859711335007",
            "1190993123116009347",
            "1190694817064820071",
            "1190579969104840135",
            "1190544449648749762",
            "1190325890364746076",
            "1190278018876166014",
            "1296333121791283202",
            "1296343492191145985",
            "130842272686",
            "1190331904096166941",
            "1190961505772881249",
            "1190268928046881249",
            "1190986529128074222",
            "1110671077412138598",
            "1190143424282916529",
            "1190097408254019912",
            "1191066787792100118",
            "1190679873075004551",
            "1190680098428782069",
            "125051969584",
            "1190898755953007539",
            "1189856128066420105",
            "1190457121211737419",
            "1190291777967474139",
            "125047286453",
            "1190301410301957107",
            "1190534627083572047",
            "1296343768736423938",
            "1296335799103852545",
            "1191581795509557865",
            "1191528419090865106",
            "1106990567994578796",
            "1110698181809673492",
            "1191119393708356355",
            "1191291810991101878",
            "1191389217047620159",
            "1190531616768403223",
            "125066580820",
            "1191408003015278685",
            "1190469952019278512",
            "1110707525889498889",
            "1191157601222851343",
            "1296597889039826945",
            "1296450296134995969",
            "1296590929348747265",
            "1296437549236047873",
            "1191274849356132472",
            "1190751586196424647",
            "130826577069",
            "1190312032047952750",
            "1191317187369341944",
            "1191296675005846744",
            "1190299072558982732",
            "1190140384917280426",
            "1190831746380280426",
            "1191246947960715768",
            "130897579395",
            "1190252576970644153",
            "1190916417866262618",
            "1190163296791978359",
            "1190909250876118948",
            "130896068939",
            "1190115936385547676",
            "1190819650165052519",
            "1190744770795980412",
            "1190682369011706685",
            "1190987331587424647",
            "1107119046471797795",
            "1190435777978179577",
            "1190412577382144070",
            "130880431680",
            "130883104682",
            "130884745669",
            "1190361250502400685",
            "1190330849077881638",
            "1296327710709354498",
            "130875248419",
            "1296327410959224833",
            "1190298048194901336",
            "1190321664354639352",
            "1191027394357495146",
            "1190278816133185217",
            "130842119884",
            "1191243203271081757",
            "125059955670",
            "130902153000",
            "1190225696015849085",
            "1190119232059387037",
            "1191036835749099727",
            "1110647557864197692",
            "125039319995",
            "1189893088539548768",
            "1189726208214056801",
            "1190713379644946240",
            "1190395202532129916",
            "1190422625077488943",
            "1190317122700486574",
            "1107136198301386588",
            "1191179841940535984",
            "1191252898903673005",
            "1190628992638709955",
            "1190649792751736906",
            "1191358305724242551",
            "1191367842846573806",
            "1190492480578504408",
            "1191421411757512971",
            "1191127361304134023",
            "1191108705435663603",
            "1191070177338553271",
            "130924347880",
            "1107216742077394488",
            "1191256866719598335",
            "1191245986389754214",
            "1191478051036558918",
            "1191194881270811306",
            "1104551300717533190",
            "1191426659264867321",
            "1191070945450554406",
            "1296595079295750145",
            "1296606382362021889",
            "130914820544",
            "1296391475620302849",
            "1296401288114769921",
            "1296386178738638849",
            "1296459053657198594",
            "1296377471374168065",
            "1296614572826906625",
            "1296434717195849729",
            "125052288411",
            "1190453315095776855",
            "1190845058596296543",
            "1189182752100671127",
            "125048869136",
            "1191320035736194440",
            "1191328899352316949",
            "1191005025603573919",
            "1191042914048369762",
            "1191030274561991207",
            "1191287011513700963",
            "1190988129640740568",
            "1107166758494271394",
            "1191222595858608484",
            "1190208544888389117",
            "1190888769500172881",
            "1191104771695982512",
            "1190067424913156657",
            "1190761953903501875",
            "130893236683",
            "1191031491128657341",
            "1110652453150697095",
            "1107134182713979195",
            "1104502916619829990",
            "1189973792326708742",
            "1190632961953702817",
            "125051823377",
            "1189850976221999775",
            "1190438114877209981",
            "1189658880190920704",
            "125048526103",
            "1190633987455404912",
            "1190370018697758643",
            "1190370818461978352",
            "1190328450373607062",
            "1191314787260224570",
            "1190988065578496907",
            "1191035042359364709",
            "1190268864444020583",
            "1190988130387348606",
            "1190822753745422428",
            "1190767234987092864",
            "1190034368344802869",
            "1189862752252193544",
            "1190543361025453645",
            "1190461217654019424",
            "1189735904781463447",
            "1106899783193228793",
            "130842751627",
            "1190436738035767210",
            "1190358433943014969",
            "130819733263",
            "1189589728902660937",
            "1106886343713659588",
            "1190297634550296722",
            "1296326483554422785",
            "1106994247363673192",
            "1191309985540103083",
            "1190563680517385085",
            "1191193985121696213",
            "1191212962752358640",
            "1190479328741083132",
            "1190427936548746848",
            "1190401152890401621",
            "1191381443102848300",
            "1191123650774074510",
            "1191343265340448910",
            "130918733605",
            "130925989992",
            "1107216774112676294",
            "1190574560837783865",
            "1190494496987808751",
            "1190453440075895279",
            "1110702757252707395",
            "1296448294497636354",
            "1296430155611475970",
            "1296461254815354882",
            "1296476579715846145",
            "1296433245313863682",
            "1296357023810818050",
            "1296387485541109761",
            "1296392823256604674",
            "1296446444373364738",
            "1296356843818405889",
            "1190572352466345907",
            "1190636545588597524",
            "1190330272266856429",
            "1191266787926300938",
            "1190989377511978836",
            "1104531364864600796",
            "1191220675487976059",
            "1190982978097405653",
            "1190968354838451948",
            "1190938337211213526",
            "1190912513886962436",
            "125059861972",
            "1107155078620679199",
            "1106938439846402988",
            "1190765890043464100",
            "1189923680898495319",
            "1106924231317511198",
            "1190904931071896955",
            "1190618338430272128",
            "1110634053134679991",
            "1189805376035811471",
            "1189741184430346922",
            "1189656768055922139",
            "1189645056885420070",
            "1190608707803978352",
            "1190324930991746076",
            "1188864128103902924",
            "1191076866900142836",
            "1191304003410307372",
            "1191024706297782548",
            "1107152006647155192",
            "1190185408287826976",
            "1190885665328184327",
            "1104517604071186190",
            "1107140422547321598",
            "1190745377465155365",
            "1188588736063163749",
            "1190693666097674502",
            "1190687522526525015",
            "1189829344977838545",
            "1190476482899766619",
            "1190755395131099816",
            "125054703258",
            "130823813966",
            "130890801637",
            "1190598787240119454",
            "130824874413",
            "125047123477",
            "1190307202149171472",
            "125044810835",
            "1296329917166866433",
            "1104563460723798991",
            "130918520453",
            "1191424451330512971",
            "1191138145768291080",
            "1191403619796310628",
            "1191119393711356355",
            "1191097889804276021",
            "1191093666806265956",
            "1190344864822456036",
            "1191677379263697377",
            "1191197793499564666",
            "125067681308",
            "1191188737655215884",
            "130907339463",
            "125057816153",
            "1296430606241058818",
            "1296403058918658049",
            "1296591483869302786",
            "1296462265124474881",
            "1296403058918658049",
            "1296358204719058945",
            "1296421092102213634",
            "1294827475518697474",
            "1296425980416724993",
            "1296298586395414530",
            "1191251169778297665",
            "1191252993170382237",
            "124957211353"};
}
